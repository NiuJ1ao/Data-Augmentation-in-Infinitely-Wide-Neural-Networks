WARNING:absl:No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
[2022-08-12 07:16:38,613 INFO] (util:27) Namespace(augment_X=None, augment_y=None, batch_size=0, device_count=-1, epochs=1, lr=0.1, model='fcn', momentum=0.9, num_inducing_points=750, select_method='random')
[2022-08-12 07:16:39,465 INFO] (data_loader:91) MNIST: (5000, 784) train, (10000, 784) test samples.
[2022-08-12 07:16:39,570 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 100----
[2022-08-12 07:16:39,691 INFO] (snngp_inference:59) inducing_points shape: (100, 784)
[2022-08-12 07:16:39,702 INFO] (snngp:272) Optimizing...
2022-08-12 07:16:46.481078: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:65] Constant folding an instruction is taking > 1s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-12 07:16:48.523553: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:133] The operation took 3.042548588s
Constant folding an instruction is taking > 1s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
[2022-08-12 07:17:01,500 INFO] (snngp:280) Optimized for 14 iters; Success: True; Result: [1.1690704  0.44435175], 0.040909302150054824
[2022-08-12 07:17:05,779 INFO] (snngp_vary_inducing_random:46) ELBO: 6034.6718608558585
[2022-08-12 07:17:05,843 INFO] (snngp_vary_inducing_random:48) EUBO: 33196.12171778998
[2022-08-12 07:17:08,627 INFO] (snngp_vary_inducing_random:52) Loss: 0.1971340344832896
[2022-08-12 07:17:08,722 INFO] (snngp_vary_inducing_random:54) Accuracy: 85.54%
[2022-08-12 07:17:08,735 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 123----
[2022-08-12 07:17:08,835 INFO] (snngp_inference:59) inducing_points shape: (123, 784)
[2022-08-12 07:17:08,836 INFO] (snngp:272) Optimizing...
2022-08-12 07:17:16.491947: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:65] Constant folding an instruction is taking > 2s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-12 07:17:18.153696: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:133] The operation took 3.661815318s
Constant folding an instruction is taking > 2s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
[2022-08-12 07:17:31,888 INFO] (snngp:280) Optimized for 12 iters; Success: True; Result: [1.19042132 0.3222708 ], 0.03789431025235326
[2022-08-12 07:17:36,182 INFO] (snngp_vary_inducing_random:46) ELBO: 7466.3875283195375
[2022-08-12 07:17:36,221 INFO] (snngp_vary_inducing_random:48) EUBO: 35019.83786200706
[2022-08-12 07:17:38,944 INFO] (snngp_vary_inducing_random:52) Loss: 0.18896513824204073
[2022-08-12 07:17:38,945 INFO] (snngp_vary_inducing_random:54) Accuracy: 87.18%
[2022-08-12 07:17:38,945 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 151----
[2022-08-12 07:17:39,054 INFO] (snngp_inference:59) inducing_points shape: (151, 784)
[2022-08-12 07:17:39,054 INFO] (snngp:272) Optimizing...
2022-08-12 07:17:48.875282: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:65] Constant folding an instruction is taking > 4s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-12 07:17:49.366955: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:133] The operation took 4.491737954s
Constant folding an instruction is taking > 4s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
[2022-08-12 07:18:02,903 INFO] (snngp:280) Optimized for 10 iters; Success: True; Result: [1.19894286 0.301043  ], 0.03658257981591862
[2022-08-12 07:18:07,162 INFO] (snngp_vary_inducing_random:46) ELBO: 8093.822304273221
[2022-08-12 07:18:07,205 INFO] (snngp_vary_inducing_random:48) EUBO: 35819.322575227154
[2022-08-12 07:18:09,881 INFO] (snngp_vary_inducing_random:52) Loss: 0.18502559692048096
[2022-08-12 07:18:09,882 INFO] (snngp_vary_inducing_random:54) Accuracy: 87.65%
[2022-08-12 07:18:09,882 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 185----
[2022-08-12 07:18:09,990 INFO] (snngp_inference:59) inducing_points shape: (185, 784)
[2022-08-12 07:18:09,990 INFO] (snngp:272) Optimizing...
[2022-08-12 07:18:35,503 INFO] (snngp:280) Optimized for 12 iters; Success: True; Result: [1.20776199 0.29353264], 0.0348285756805001
[2022-08-12 07:18:39,849 INFO] (snngp_vary_inducing_random:46) ELBO: 9021.15535148183
[2022-08-12 07:18:39,893 INFO] (snngp_vary_inducing_random:48) EUBO: 36927.593831952974
[2022-08-12 07:18:42,568 INFO] (snngp_vary_inducing_random:52) Loss: 0.17990116309056
[2022-08-12 07:18:42,568 INFO] (snngp_vary_inducing_random:54) Accuracy: 88.92%
[2022-08-12 07:18:42,569 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 228----
[2022-08-12 07:18:42,678 INFO] (snngp_inference:59) inducing_points shape: (228, 784)
[2022-08-12 07:18:42,679 INFO] (snngp:272) Optimizing...
[2022-08-12 07:19:09,833 INFO] (snngp:280) Optimized for 12 iters; Success: True; Result: [1.21690271 0.29649912], 0.033141746769915464
[2022-08-12 07:19:14,274 INFO] (snngp_vary_inducing_random:46) ELBO: 9902.152283162359
[2022-08-12 07:19:14,321 INFO] (snngp_vary_inducing_random:48) EUBO: 38017.24458404928
[2022-08-12 07:19:17,066 INFO] (snngp_vary_inducing_random:52) Loss: 0.17575056429519445
[2022-08-12 07:19:17,067 INFO] (snngp_vary_inducing_random:54) Accuracy: 89.23%
[2022-08-12 07:19:17,068 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 280----
[2022-08-12 07:19:17,176 INFO] (snngp_inference:59) inducing_points shape: (280, 784)
[2022-08-12 07:19:17,176 INFO] (snngp:272) Optimizing...
2022-08-12 07:19:31.068903: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:65] Constant folding an instruction is taking > 8s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-12 07:19:31.420856: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:133] The operation took 8.352021298s
Constant folding an instruction is taking > 8s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
[2022-08-12 07:19:46,179 INFO] (snngp:280) Optimized for 12 iters; Success: True; Result: [1.22761694 0.30157438], 0.03086063511895729
[2022-08-12 07:19:50,435 INFO] (snngp_vary_inducing_random:46) ELBO: 11157.782884719563
[2022-08-12 07:19:50,493 INFO] (snngp_vary_inducing_random:48) EUBO: 39595.98022145736
[2022-08-12 07:19:53,245 INFO] (snngp_vary_inducing_random:52) Loss: 0.16988213583601103
[2022-08-12 07:19:53,246 INFO] (snngp_vary_inducing_random:54) Accuracy: 90.37%
[2022-08-12 07:19:53,247 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 344----
[2022-08-12 07:19:53,355 INFO] (snngp_inference:59) inducing_points shape: (344, 784)
[2022-08-12 07:19:53,355 INFO] (snngp:272) Optimizing...
[2022-08-12 07:20:25,480 INFO] (snngp:280) Optimized for 11 iters; Success: True; Result: [1.23317121 0.30050536], 0.02975537870482743
[2022-08-12 07:20:29,856 INFO] (snngp_vary_inducing_random:46) ELBO: 11854.53125685655
[2022-08-12 07:20:29,929 INFO] (snngp_vary_inducing_random:48) EUBO: 40332.50247550336
[2022-08-12 07:20:32,661 INFO] (snngp_vary_inducing_random:52) Loss: 0.1668743202896102
[2022-08-12 07:20:32,661 INFO] (snngp_vary_inducing_random:54) Accuracy: 90.55%
[2022-08-12 07:20:32,662 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 423----
[2022-08-12 07:20:32,764 INFO] (snngp_inference:59) inducing_points shape: (423, 784)
[2022-08-12 07:20:32,764 INFO] (snngp:272) Optimizing...
[2022-08-12 07:21:08,576 INFO] (snngp:280) Optimized for 11 iters; Success: True; Result: [1.24026278 0.32455685], 0.028172407890030875
[2022-08-12 07:21:13,039 INFO] (snngp_vary_inducing_random:46) ELBO: 12810.875519343164
[2022-08-12 07:21:13,126 INFO] (snngp_vary_inducing_random:48) EUBO: 41451.30017606039
[2022-08-12 07:21:16,029 INFO] (snngp_vary_inducing_random:52) Loss: 0.16256663167699167
[2022-08-12 07:21:16,030 INFO] (snngp_vary_inducing_random:54) Accuracy: 91.20%
[2022-08-12 07:21:16,031 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 519----
[2022-08-12 07:21:16,141 INFO] (snngp_inference:59) inducing_points shape: (519, 784)
[2022-08-12 07:21:16,141 INFO] (snngp:272) Optimizing...
[2022-08-12 07:21:58,982 INFO] (snngp:280) Optimized for 13 iters; Success: True; Result: [1.24948552 0.34070953], 0.026243183946244274
[2022-08-12 07:22:03,484 INFO] (snngp_vary_inducing_random:46) ELBO: 14016.065276551162
[2022-08-12 07:22:03,575 INFO] (snngp_vary_inducing_random:48) EUBO: 42897.520278449025
[2022-08-12 07:22:06,625 INFO] (snngp_vary_inducing_random:52) Loss: 0.15723436762195295
[2022-08-12 07:22:06,626 INFO] (snngp_vary_inducing_random:54) Accuracy: 91.95%
[2022-08-12 07:22:06,627 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 638----
[2022-08-12 07:22:06,735 INFO] (snngp_inference:59) inducing_points shape: (638, 784)
[2022-08-12 07:22:06,736 INFO] (snngp:272) Optimizing...
2022-08-12 07:22:30.696520: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:65] Constant folding an instruction is taking > 16s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-12 07:22:33.703931: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:133] The operation took 19.00747864s
Constant folding an instruction is taking > 16s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
[2022-08-12 07:22:56,785 INFO] (snngp:280) Optimized for 13 iters; Success: True; Result: [1.2559931  0.35258737], 0.024805358752663986
[2022-08-12 07:23:01,363 INFO] (snngp_vary_inducing_random:46) ELBO: 15032.26153613306
[2022-08-12 07:23:01,479 INFO] (snngp_vary_inducing_random:48) EUBO: 43962.05137098716
[2022-08-12 07:23:04,670 INFO] (snngp_vary_inducing_random:52) Loss: 0.1534985254571621
[2022-08-12 07:23:04,670 INFO] (snngp_vary_inducing_random:54) Accuracy: 92.41%
[2022-08-12 07:23:04,671 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 784----
[2022-08-12 07:23:04,772 INFO] (snngp_inference:59) inducing_points shape: (784, 784)
[2022-08-12 07:23:04,772 INFO] (snngp:272) Optimizing...
[2022-08-12 07:24:03,573 INFO] (snngp:280) Optimized for 12 iters; Success: True; Result: [1.26249038 0.3724996 ], 0.023507075622143644
[2022-08-12 07:24:08,046 INFO] (snngp_vary_inducing_random:46) ELBO: 15960.810590960937
[2022-08-12 07:24:08,176 INFO] (snngp_vary_inducing_random:48) EUBO: 44919.41687850916
[2022-08-12 07:24:11,545 INFO] (snngp_vary_inducing_random:52) Loss: 0.1501313823882175
[2022-08-12 07:24:11,546 INFO] (snngp_vary_inducing_random:54) Accuracy: 92.37%
[2022-08-12 07:24:11,547 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 963----
[2022-08-12 07:24:11,650 INFO] (snngp_inference:59) inducing_points shape: (963, 784)
[2022-08-12 07:24:11,650 INFO] (snngp:272) Optimizing...
[2022-08-12 07:25:23,883 INFO] (snngp:280) Optimized for 11 iters; Success: True; Result: [1.27169248 0.38139551], 0.0215866285796266
[2022-08-12 07:25:28,491 INFO] (snngp_vary_inducing_random:46) ELBO: 17295.414410916834
[2022-08-12 07:25:28,661 INFO] (snngp_vary_inducing_random:48) EUBO: 46512.416056086004
[2022-08-12 07:25:32,242 INFO] (snngp_vary_inducing_random:52) Loss: 0.14539520748005047
[2022-08-12 07:25:32,243 INFO] (snngp_vary_inducing_random:54) Accuracy: 92.99%
[2022-08-12 07:25:32,243 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 1183----
[2022-08-12 07:25:32,350 INFO] (snngp_inference:59) inducing_points shape: (1183, 784)
[2022-08-12 07:25:32,350 INFO] (snngp:272) Optimizing...
2022-08-12 07:26:18.407483: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:65] Constant folding an instruction is taking > 32s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-12 07:26:21.705100: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:133] The operation took 35.297686561s
Constant folding an instruction is taking > 32s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
[2022-08-12 07:27:04,380 INFO] (snngp:280) Optimized for 12 iters; Success: True; Result: [1.27897648 0.40303058], 0.020421109419315672
[2022-08-12 07:27:09,397 INFO] (snngp_vary_inducing_random:46) ELBO: 18175.483343743756
[2022-08-12 07:27:09,623 INFO] (snngp_vary_inducing_random:48) EUBO: 47327.39119692255
[2022-08-12 07:27:13,350 INFO] (snngp_vary_inducing_random:52) Loss: 0.14294298777613576
[2022-08-12 07:27:13,351 INFO] (snngp_vary_inducing_random:54) Accuracy: 93.26%
[2022-08-12 07:27:13,351 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 1454----
[2022-08-12 07:27:13,459 INFO] (snngp_inference:59) inducing_points shape: (1454, 784)
[2022-08-12 07:27:13,460 INFO] (snngp:272) Optimizing...
[2022-08-12 07:29:08,617 INFO] (snngp:280) Optimized for 11 iters; Success: True; Result: [1.28723474 0.41010752], 0.018952881015950176
[2022-08-12 07:29:13,841 INFO] (snngp_vary_inducing_random:46) ELBO: 19294.988308940614
[2022-08-12 07:29:14,207 INFO] (snngp_vary_inducing_random:48) EUBO: 48463.85825225325
[2022-08-12 07:29:18,245 INFO] (snngp_vary_inducing_random:52) Loss: 0.13907112422315301
[2022-08-12 07:29:18,246 INFO] (snngp_vary_inducing_random:54) Accuracy: 93.68%
[2022-08-12 07:29:18,247 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 1786----
[2022-08-12 07:29:18,353 INFO] (snngp_inference:59) inducing_points shape: (1786, 784)
[2022-08-12 07:29:18,353 INFO] (snngp:272) Optimizing...
[2022-08-12 07:31:46,247 INFO] (snngp:280) Optimized for 12 iters; Success: True; Result: [1.29583404 0.41878513], 0.01759855867723273
[2022-08-12 07:31:51,945 INFO] (snngp_vary_inducing_random:46) ELBO: 20328.06249676343
[2022-08-12 07:31:52,467 INFO] (snngp_vary_inducing_random:48) EUBO: 49444.26851699117
[2022-08-12 07:31:57,070 INFO] (snngp_vary_inducing_random:52) Loss: 0.1359142318170464
[2022-08-12 07:31:57,071 INFO] (snngp_vary_inducing_random:54) Accuracy: 94.07%
[2022-08-12 07:31:57,072 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 2194----
[2022-08-12 07:31:57,173 INFO] (snngp_inference:59) inducing_points shape: (2194, 784)
[2022-08-12 07:31:57,173 INFO] (snngp:272) Optimizing...
2022-08-12 07:33:35.851257: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:65] Constant folding an instruction is taking > 1m4s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-12 07:33:37.361143: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:133] The operation took 1m5.509954392s
Constant folding an instruction is taking > 1m4s:

  dot.5 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
[2022-08-12 07:35:11,589 INFO] (snngp:280) Optimized for 11 iters; Success: True; Result: [1.30388404 0.41077275], 0.01617431589053331
[2022-08-12 07:35:17,851 INFO] (snngp_vary_inducing_random:46) ELBO: 21497.747654610568
[2022-08-12 07:35:18,617 INFO] (snngp_vary_inducing_random:48) EUBO: 50478.2568487673
[2022-08-12 07:35:23,479 INFO] (snngp_vary_inducing_random:52) Loss: 0.13283932244749325
[2022-08-12 07:35:23,479 INFO] (snngp_vary_inducing_random:54) Accuracy: 94.36%
[2022-08-12 07:35:23,480 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 2696----
[2022-08-12 07:35:23,604 INFO] (snngp_inference:59) inducing_points shape: (2696, 784)
[2022-08-12 07:35:23,604 INFO] (snngp:272) Optimizing...
[2022-08-12 07:39:40,838 INFO] (snngp:280) Optimized for 11 iters; Success: True; Result: [1.31496684 0.3931389 ], 0.014334051305979029
[2022-08-12 07:39:47,767 INFO] (snngp_vary_inducing_random:46) ELBO: 22985.271799751128
[2022-08-12 07:39:48,904 INFO] (snngp_vary_inducing_random:48) EUBO: 51793.154584852186
[2022-08-12 07:39:54,602 INFO] (snngp_vary_inducing_random:52) Loss: 0.12929401079763797
[2022-08-12 07:39:54,602 INFO] (snngp_vary_inducing_random:54) Accuracy: 94.88%
[2022-08-12 07:39:54,603 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 3312----
[2022-08-12 07:39:54,705 INFO] (snngp_inference:59) inducing_points shape: (3312, 784)
[2022-08-12 07:39:54,706 INFO] (snngp:272) Optimizing...
[2022-08-12 07:46:24,527 INFO] (snngp:280) Optimized for 13 iters; Success: True; Result: [1.32768439 0.37055734], 0.012278587557880508
[2022-08-12 07:46:32,583 INFO] (snngp_vary_inducing_random:46) ELBO: 24697.029096480175
[2022-08-12 07:46:34,403 INFO] (snngp_vary_inducing_random:48) EUBO: 53170.69025902482
[2022-08-12 07:46:40,998 INFO] (snngp_vary_inducing_random:52) Loss: 0.1255933416524107
[2022-08-12 07:46:40,999 INFO] (snngp_vary_inducing_random:54) Accuracy: 95.20%
[2022-08-12 07:46:41,000 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 4070----
[2022-08-12 07:46:41,109 INFO] (snngp_inference:59) inducing_points shape: (4070, 784)
[2022-08-12 07:46:41,109 INFO] (snngp:272) Optimizing...
[2022-08-12 07:55:30,922 INFO] (snngp:280) Optimized for 12 iters; Success: True; Result: [1.34660107 0.33331883], 0.009412746023781659
[2022-08-12 07:55:40,623 INFO] (snngp_vary_inducing_random:46) ELBO: 27164.84253932193
[2022-08-12 07:55:43,088 INFO] (snngp_vary_inducing_random:48) EUBO: 54867.117259572144
[2022-08-12 07:55:50,719 INFO] (snngp_vary_inducing_random:52) Loss: 0.12085347406970967
[2022-08-12 07:55:50,720 INFO] (snngp_vary_inducing_random:54) Accuracy: 95.51%
[2022-08-12 07:55:50,721 INFO] (snngp_vary_inducing_random:31) 
----Number of inducing point: 5000----
[2022-08-12 07:55:50,834 INFO] (snngp_inference:59) inducing_points shape: (5000, 784)
[2022-08-12 07:55:50,835 INFO] (snngp:272) Optimizing...
2022-08-12 07:58:04.901878: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:65] Constant folding an instruction is taking > 2m8s:

  dot.2 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
2022-08-12 07:58:26.238272: E external/org_tensorflow/tensorflow/compiler/xla/service/slow_operation_alarm.cc:133] The operation took 2m29.336465309s
Constant folding an instruction is taking > 2m8s:

  dot.2 (displaying the full instruction incurs a runtime overhead. Raise your logging level to 4 or above).

This isn't necessarily a bug; constant-folding is inherently a trade-off between compilation time and speed at runtime.  XLA has some guards that attempt to keep constant folding from taking too long, but fundamentally you'll always be able to come up with an input program that takes a long time.

If you'd like to file a bug, run with envvar XLA_FLAGS=--xla_dump_to=/tmp/foo and attach the results.
[2022-08-12 08:11:11,611 INFO] (snngp:280) Optimized for 19 iters; Success: True; Result: [1.4133622 0.2318313], 0.0001485409260858025
[2022-08-12 08:11:22,601 INFO] (snngp_vary_inducing_random:46) ELBO: 37323.90163605681
[2022-08-12 08:11:26,358 INFO] (snngp_vary_inducing_random:48) EUBO: 43916.82360649229
[2022-08-12 08:11:35,834 INFO] (snngp_vary_inducing_random:52) Loss: 0.11092694835690216
[2022-08-12 08:11:35,834 INFO] (snngp_vary_inducing_random:54) Accuracy: 96.19%
